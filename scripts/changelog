#!/usr/bin/env python3

import argparse
from datetime import datetime
from debian.changelog import Changelog, Version
from debian.deb822 import Deb822
import os.path
from subprocess import check_call, check_output
import sys

from lib import foreach_repo, github, github_no_pages

parser = argparse.ArgumentParser(description="Create changelog of Pop!_OS repositories")
parser.add_argument("repos", nargs="*", default=[])
args = parser.parse_args(sys.argv[1:])

def callback(repo):
    print("\x1B[1m" + repo["name"] + "\x1B[0m")

    if os.path.exists(repo["name"]):
        o = check_output(["git", "-C", repo["name"], "tag", "--merged", "origin/master"])

        with open(os.path.join(repo["name"], "debian", "control"), "r") as fp:
            control = Deb822(fp)

        changelog = Changelog()

        for tag in o.decode().splitlines():
            print(tag)

            url = repo["releases_url"].replace("{/id}", "/tags/" + tag)
            print(url)
            try:
                release = github_no_pages(url)

                dt = datetime.strptime(release["created_at"], "%Y-%m-%dT%H:%M:%SZ")

                changelog.new_block(
                    package=control.get("Source"),
                    version=Version(tag),
                    distributions="artful",
                    urgency="medium",
                    author='Pop Launchpad <pop.launchpad@system76.com>',
                    date=datetime.strftime(dt, "%a, %d %b %Y %H:%M:%S +0000")
                )

                changelog.add_change('')
                for line in release["body"].strip('\r\n').splitlines():
                    changelog.add_change('  ' + line)
                changelog.add_change('')
            except Exception as ex:
                print("{!r}".format(ex))

        print(changelog)
    else:
        print("does not exist")

foreach_repo(callback, args.repos)
